<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.Common" Version="4.11.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.11.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.11.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.8">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.ML" Version="3.0.1" />
    <PackageReference Include="Microsoft.ML.LightGbm" Version="3.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.8.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\BudgetManageAPIGenerator\BudgetManageAPIGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\CommonLibrary\CommonLibrary.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="docs\" />
    <Folder Include="Examples\Tests\" />
    <Folder Include="obj\Generated\BudgetManageAPIGenerator\" />
  </ItemGroup>

  <PropertyGroup>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)Generated</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>
  <Target Name="CleanGeneratedFiles" BeforeTargets="Build">
    <Delete Files="@(GeneratedFiles)" />
  </Target>
  <!--<Target Name="MoveGeneratedTests" AfterTargets="Build">
    <MakeDir Directories="..\YourTestProject\GeneratedTests\" />
    <Copy SourceFiles="obj\Generated\BudgetManageAPIGenerator\BudgetManageAPIGenerator.Generators.DocumentationGenerator\*.cs" DestinationFolder="..\YourTestProject\GeneratedTests\" SkipUnchangedFiles="true" />
  </Target>-->
  <Target Name="CopyGeneratedTestFiles" AfterTargets="AfterCompile">
    <ItemGroup>
      <GeneratedTests Include="obj\Generated\BudgetManageAPIGenerator\**\*GeneratedTests.cs" />
    </ItemGroup>
    <Move SourceFiles="@(GeneratedTests)" DestinationFolder="..\TestBudgetManageAPI\Tests\GeneratedTests\" />
    <Delete Files="@(GeneratedTests)" />
  </Target>

  <!--<Target Name="CopyAndRenameMarkdownFiles" AfterTargets="AfterCompile">
    <ItemGroup>
      <MarkdownFiles Include="obj\Generated\BudgetManageAPIGenerator\**\*.md.cs" />
    </ItemGroup>

    --><!-- Create the destination directory if it doesn't exist --><!--
    <MakeDir Directories="$(ProjectDir)docs" Condition="!Exists('$(ProjectDir)docs')" />

    --><!-- Copy and rename the files --><!--
    <Copy
      SourceFiles="@(MarkdownFiles)"
      DestinationFiles="@(MarkdownFiles->'$(ProjectDir)docs\%(Filename).md')"
      />

    --><!-- Optionally delete the original .md.cs files after copying --><!--
    <Delete Files="@(MarkdownFiles)" />
  </Target>-->






</Project>
